version: "3"

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: scielo_core_local_django
    container_name: scielo_core_local_django
    depends_on:
      - redis
      - postgres
      - mailhog
      - pgbouncer
      - solr
    links:
      - pgbouncer
      - solr
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8009:8000"
    command: /start

  pgbouncer:
    image: edoburu/pgbouncer:1.14.0
    restart: always
    container_name: scielo_core_local_pgbouncer
    environment:
      - DATABASE_URL=postgres://GVRFlLmcCNfGLhsFvSnCioYOPJPYpyfj:BQ4hSUL4rdj5WZLdR8ilDLRQMvCtzo0caMaXDO0olGsmycQjlcZlTVK9DepZR8kk@postgres/scielo_core
      - MAX_CLIENT_CONN=100
    ports:
      - 6439:5432
    depends_on:
      - postgres
    links:
      - postgres

  solr:
    image: solr:9.3
    restart: always
    ports:
      - "8983:8983"
    volumes:
        - ./index:/var/solr
    environment:
      - SOLR_JAVA_MEM=-Xms512m -Xmx512m
      - SOLR_HEAP=512m

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: scielo_core_local_postgres
    container_name: scielo_core_local_postgres
    volumes:
      - ../scms_data/scielo_core/data_dev:/var/lib/postgresql/data:Z
      - ../scms_data/scielo_core/data_dev_backup:/backups:z
    ports:
      - "5439:5432"
    env_file:
      - ./.envs/.local/.postgres

  adminer:
    image: adminer
    container_name: scielo_core_local_adminer
    ports:
      - "8089:8080"

  # docs:
  #   image: scielo_core_local_docs
  #   container_name: scielo_core_local_docs
  #   build:
  #     context: .
  #     dockerfile: ./compose/local/docs/Dockerfile
  #   env_file:
  #     - ./.envs/.local/.django
  #   volumes:
  #     - ./docs:/docs:z
  #     - ./config:/app/config:z
  #     - ./core:/app/core:z
  #   ports:
  #     - "9000:9000"
  #   command: /start-docs

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: scielo_core_local_mailhog
    ports:
      - "8029:8025"

  redis:
    image: redis:6
    container_name: scielo_core_local_redis
    ports:
      - "6399:6379"


  celeryworker:
    <<: *django
    image: scielo_core_local_celeryworker
    container_name: scielo_core_local_celeryworker
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: scielo_core_local_celerybeat
    container_name: scielo_core_local_celerybeat
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: scielo_core_local_flower
    container_name: scielo_core_local_flower
    ports:
      - "5559:5555"
    command: /start-flower

  # logstash:
  #   container_name: scielo_core_local_logstash
  #   build:
  #     context: ./docker_compose_dashboard/logstash/
  #     dockerfile: Dockerfile
  #   restart: always
  #   depends_on:
  #     - elasticsearch
  #   volumes:
  #     - ./logs:/logs:ro

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
  #   container_name: scielo_core_local_elasticsearch
  #   restart: always
  #   environment:
  #     - discovery.type=single-node
  #     - http.host=0.0.0.0
  #     - xpack.security.enabled=false
  #     - ES_JAVA_OPTS=-Xms750m -Xmx750m
  #   volumes:
  #     - elasticsearch_volume:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200

  # kibana:
  #   # image: docker.elastic.co/kibana/kibana:8.14.0
  #   container_name: scielo_core_local_kibana
  #   build:
  #     context: ./docker_compose_dashboard/kibana/
  #     dockerfile: Dockerfile
  #   restart: always
  #   ports:
  #     - 5601:5601
  #   depends_on:
  #     - elasticsearch

  prometheus:
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
    volumes:
      - ./docker_compose_dashboard/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      # - ./docker_compose_dashboard/prometheus/django.rules:/etc/prometheus/django.rules
      - prometheus_data:/var/lib/grafana

  grafana:
    # image: grafana/grafana:latest
    build:
      context: ./docker_compose_dashboard/grafana/
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    env_file:
      - ./.envs/.local/.dashboard
    volumes:
      - grafana_data:/var/lib/grafana

  celery-exporter:
    image: danihodovic/celery-exporter
    restart: always
    ports:
     - 9808:9808
    command: ["--broker-url=redis://redis:6379/0"]
    depends_on:
     - redis

  victoriametrics:
    image: victoriametrics/victoria-metrics
    restart: always
    ports:
      - 8428:8428
    depends_on:
     - prometheus

volumes:
  elasticsearch_volume:
  static_volume:
  grafana_data:
  prometheus_data: